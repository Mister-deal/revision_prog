1. Conditions simples

1. �crire un programme qui v�rifie si un nombre donn� est sup�rieur � 10.
2. V�rifier si un nombre donn� est positif, n�gatif ou nul.
3. Cr�er un programme qui affiche "Vous �tes mineur" si l��ge est inf�rieur � 18.
4. �crire un programme qui v�rifie si une cha�ne de caract�res est vide ou non.
5. V�rifier si un nombre est pair ou impair.
6. �crire un programme qui compare deux nombres et affiche le plus grand.
7. V�rifier si un nombre est divisible par 3 ou par 5.
8. Demander � l'utilisateur un mot de passe et v�rifier s'il correspond � "admin".
9. Cr�er un programme qui v�rifie si une lettre est une voyelle ou une consonne.
10. Calculer le nombre de caract�res dans une cha�ne de caract�res, si le nombre de caract�res est sup�rieur � 5, ne garder que les 5 premiers caract�res.

2. Conditions imbriqu�es

11. �crire un programme qui v�rifie si un nombre est compris entre 10 et 20.
12. Demander � l'utilisateur un �ge et afficher s'il est un enfant (moins de 12 ans), un adolescent (entre 12 et 18 ans) ou un adulte (plus de 18 ans).
13. Cr�er un programme qui v�rifie si une ann�e est bissextile ou non.
14. V�rifier si un nombre est positif et multiple de 5.
15. �crire un programme qui v�rifie si une cha�ne de caract�res contient la lettre 'a'.
16. V�rifier si un nombre est divisible � la fois par 2 et par 3, mais pas par 9.
17. Demander � l'utilisateur un nom d'utilisateur et un mot de passe, et v�rifier si les deux sont corrects.
18. �crire un programme qui affiche "Excellent" si la note est sup�rieure � 85, "Bien" si elle est entre 70 et 85, sinon afficher "Peut mieux faire".
19. Cr�er un programme qui v�rifie si une cha�ne de caract�res est un palindrome.
20. �crire un programme qui v�rifie si un nombre est � la fois positif, pair et sup�rieur � 100.

3. Boucles simples

21. Afficher les nombres de 1 � in10 avec une boucle `for`.
22. Afficher les nombres pairs entre 1 et 20.
23. Utiliser une boucle pour afficher chaque �l�ment d'un tableau.
24. Demander � l'utilisateur un nombre de 1 � 10 et afficher la table de multiplication.
25. Afficher les �l�ments d'une cha�ne de caract�res un par un.
26. Utiliser une boucle pour afficher les nombres de 0 � 100 avec un pas de 10.
27. Afficher les �l�ments d'une liste avec leurs indices.
28. Afficher les nombres de 10 � 1 en ordre d�croissant avec une boucle.
29. Cr�er une boucle qui calcule la somme des nombres de 1 � 50.
30. Utiliser une boucle pour afficher les 5 premi�res lettres de l'alphabet.

4. Boucles `while`

31. Utiliser une boucle `while` pour afficher les nombres de 1 à 10.
32. Utiliser une boucle `while` pour calculer la somme des nombres de 1 à 100.
33. Demander à l'utilisateur un nombre et continuer à demander tant que ce nombre est négatif.
34. Créer une boucle infinie qui demande un mot de passe jusqu'à ce qu'il soit correct.
35. Utiliser `while` pour afficher les multiples de 5 entre 1 et 50.
36. Écrire une boucle qui affiche les nombres de 1 à 10, puis termine avec un message "Fin de la boucle".
37. Créer une boucle `while` qui décrémente un nombre à partir de 10 jusqu'à 0.
38. Demander un nombre à l'utilisateur et calculer sa factorielle avec une boucle `while`.
39. Afficher les nombres pairs de 2 à 200 si ils sont divisible par 3 avec une boucle `while`.
40. Créer une tableau d'une certaine longueur, demander à l'utilisateur des nombres et les affecter au tableau tant qu'il n'est pas rempli entièrement.

5. Utilisation des boucles avec `break` et `continue`

41. Utiliser une boucle pour afficher les nombres de 1 à 20, mais arrêter dès que vous atteignez 10.
42. Créer une boucle qui demande un nombre et s'arrête si le nombre est 0.
43. Utiliser `continue` pour afficher uniquement les nombres impairs de 1 à 10.
44. Écrire une boucle qui affiche les nombres de 1 à 20, mais saute les multiples de 3.
45. Demander à l'utilisateur un nombre et afficher tous les nombres de 1 à ce nombre, sauf ceux divisibles par 4.
46. Créer une boucle qui affiche les éléments d'un tableau mais s'arrête dès qu'elle rencontre un élément spécifique.
47. Utiliser `break` pour quitter une boucle infinie après 5 itérations.
48. Utiliser `continue` pour ignorer les lettres 'a' et 'e' lors de l'affichage des lettres d'un mot.
49. Écrire une boucle qui demande à l'utilisateur de saisir un mot, mais qui s'arrête dès qu'il entre "stop".
50. Afficher les éléments d’une liste, arrêter la boucle si un même élément apparaît une deuxième fois.